# in the subclasses only args can be defined that are also 
# specified as args in the respective classes passed in to the
# LightningCLI_Custom. (for the trainer by default: class Trainer)
seed_everything: 123
trainer:
  # simply replace everything with a bool 'true' to use TensorBoard
  logger: 
    class_path: pytorch_lightning.loggers.WandbLogger
    init_args:
      project: 'raw_performances'
      name: 'resnet18_cifar10_dp_test'
      log_model: true
  checkpoint_callback: true
  callbacks: 
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        monitor: 'val_loss'
    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        patience: 5
        monitor: 'val_loss'
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: 'step'
  default_root_dir: null
  gradient_clip_val: 0.0
  gradient_clip_algorithm: norm
  process_position: 0
  num_nodes: 1
  num_processes: 1
  gpus: 1
  auto_select_gpus: false
  tpu_cores: null
  log_gpu_memory: null
  progress_bar_refresh_rate: null
  overfit_batches: 0.0
  track_grad_norm: -1
  check_val_every_n_epoch: 1
  fast_dev_run: false
  accumulate_grad_batches: 1
  max_epochs: 100
  min_epochs: null
  max_steps: null
  min_steps: null
  max_time: null
  limit_train_batches: 1.0
  limit_val_batches: 1.0
  limit_test_batches: 1.0
  limit_predict_batches: 1.0
  val_check_interval: 1.0
  flush_logs_every_n_steps: 100
  log_every_n_steps: 50
  accelerator: null
  sync_batchnorm: false
  precision: 32
  weights_summary: top
  weights_save_path: null
  num_sanity_val_steps: 2
  truncated_bptt_steps: null
  resume_from_checkpoint: null
  profiler: null
  benchmark: false
  deterministic: true
  reload_dataloaders_every_epoch: false
  auto_lr_find: false
  replace_sampler_ddp: true
  terminate_on_nan: false
  auto_scale_batch_size: false
  prepare_data_per_node: true
  plugins: null
  amp_backend: native
  amp_level: O2
  distributed_backend: null
  move_metrics_to_cpu: false
  multiple_trainloader_mode: max_size_cycle
  stochastic_weight_avg: false
model:
  # possible models: resnet18
  model_name: 'resnet18'
  # possible datasets: cifar10, fashion_mnist, imagenet, mnist
  data_name: 'cifar10'
  lr: 0.05
  # DP params
  # under model because I didn't want to overwrite the trainer class 
  # to include these arguments. I can access the params via the model 
  # attribute in the trainer class.
  dp: true
  L2_clip: 10.0
  noise_multiplier: 0.0001
  target_epsilon: 10.0
  abort: false
  target_delta: 1e-5
  fallback_to_rdp: true
data:
  # possible datasets: cifar10, fashion_mnist, imagenet, mnist
  # name: 'cifar10' 
  # dp: true
  data_dir: './'
  val_split: 0.2
  num_workers: 16
  normalize: false
  batch_size: 128
  seed: 42
  shuffle: false
  pin_memory: false
  drop_last: false
  train_transforms: null
  val_transforms: null
  test_transforms: null
  dims: null
