project: dp_benchmark
method: bayes
metric:
  goal: minimize
  name: val_loss
parameters:
  # Simple ConvNet params, see models.py
  model.conv_layers:
    distribution: categorical
    values: 
      # shallow, small
      - [8, 16]
      # deep, small
      - [8, 16, 32, 64]
      # shallow, big
      - [64, 128]
      # deep, big
      - [64, 128, 256, 512]
  # model.kernel_size: 
  #   distribution: categorical
  #   values: 
  #     - 3
  #     - 5
  #     - 7
  model.kernel_size: 
    distribution: int_uniform
    max: 8
    min: 2
  # DP params
  model.L2_clip:
    distribution: uniform
    # priors from Resnet18 Sweep 1 (wandp project: dp_benchmark) 
    max: 17.994
    min: 1.294991734215939
  model.noise_multiplier:
    distribution: uniform
    # typical range according to opacus: https://opacus.ai/docs/faq: [2.0, 0.1] 
    # priors from Resnet18 Sweep 1 (wandp project: dp_benchmark) 
    max: 3.7
    min: 0.043
  model.batch_size:
    distribution: int_uniform
    max: 64
    min: 8
  # NOTE: uncomment if this should be considered
  # trainer.max_epochs:
  #   distribution: int_uniform
  #   max: 100
  #   min: 10
  # model.target_delta:
  #   distribution: uniform
  #   max: 2e-05
  #   min: 5e-06
  # model.target_epsilon:
  #   distribution: uniform
  #   max: 100
  #   min: 10
program: trainer.py
command:
  - ${env}
  - ${interpreter}
  - ${program}
  - "--config"
  - "configs_sweep.yaml"
  - ${args}